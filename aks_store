#!bin/bash
### STILL TESTING ....

# Needs JQ to be installed
type jq >/dev/null 2>&1 || { echo >&2 "I require jq (https://stedolan.github.io/jq) but it's not installed. Aborting."; exit 1; }

resourceGroup=$(jq -r '.resourceGroup' settings.json)
keyVaultName=$(jq -r '.keyVaultName' settings.json)
locationName=$(jq -r '.locationName' settings.json)
fileShareName=$(jq -r '.fileShareName' settings.json)
kubeSecretName=$(jq -r '.kubeSecretName' settings.json)

storageAccountName=akstore$(head /dev/urandom | tr -dc a-z0-9 | head -c10)

echo "Resource Group Name  : $resourceGroup"
echo "Region Location      : $locationName"
echo "Key Vault Name       : $keyVaultName"
echo "File Share Name      : $fileShareName"
echo "Kubernetes Secret    : $kubeSecretName"

echo Creating storage account $storageAccountName
az storage account create -n $storageAccountName -g $resourceGroup -l $locationName --sku Standard_LRS

storageAccountKey=$(az storage account keys list --resource-group $resourceGroup --account-name $storageAccountName --query "[0].value" -o tsv)

echo Creating file share $fileShareName
az storage share create -n $fileShareName --account-name $storageAccountName --account-key $storageAccountKey 

# Echo storage account name and key
echo Storage account name : $storageAccountName
echo Storage account key  : $storageAccountKey

echo Creating kubernetes secret
kubectl create secret generic $kubeSecretName --from-literal=azurestorageaccountname=$storageAccountName --from-literal=azurestorageaccountkey=$storageAccountKey

echo Done.

